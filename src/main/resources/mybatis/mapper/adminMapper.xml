<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.withmall.dao.AdminMapper">


  <resultMap type="ProductDto" id="ProductMap">
    <id column="PRDT_NUM" property="prdtNum"/>
      <result column="PRDT_NAME" property="prdtName"/>
      <result column="PRDT_TITLE" property="prdtTitle"/>
      <result column="PRDT_INFO" property="prdtInfo"/>
      <result column="PRDT_REAL_PRICE" property="prdtRealPrice"/>
      <result column="PRDT_STOCK" property="prdtStock"/>
      <result column="PRDT_HIT" property="prdtHit"/>
      <association javaType="ProductCategoryDto" property="categoryDto">
        <id column="CATEGORY_NUM" property="categoryNum"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
     </association>
  </resultMap>
  
  
    <resultMap type="ProductImageDto" id="ProductImageMap">
    <result column="IMAGE_PATH"        property="imagePath" />
    <result column="FILESYSTEM_NAME"   property="filesystemName" />
    <association javaType="ProductDto" property="productDto">
      <id     column="PRDT_NUM"        property="prdtNum" />
      <result column="PRDT_NAME"       property="prdtName" />
      <result column="PRDT_TITLE"      property="prdtTitle" />
      <result column="PRDT_INFO"       property="prdtInfo" />
      <result column="PRDT_REAL_PRICE" property="prdtRealPrice" />
      <result column="PRDT_STOCK"      property="prdtStock" />
      <result column="PRDT_HIT"        property="prdtHit" />
      <association javaType="ProductCategoryDto" property="categoryDto">
        <id     column="CATEGORY_NUM"    property="categoryNum" />
        <result column="CATEGORY_NAME"   property="categoryName" />
      </association>
    </association>
  </resultMap>
  

  

  
  <!-- 제품신규등록 -->
  <insert id="insertProduct" parameterType="ProductDto">
  <!-- INSERT 수행 이전에 파라미터 ProductDto의 prdtNum의 필드에 PRODUCT_SEQ.NEXTVAL값을 저장한다. -->
  <selectKey order="BEFORE" resultType="int"  keyProperty="prdtNum">
    SELECT PRODUCT_SEQ.NEXTVAL
      FROM DUAL
  </selectKey>
    INSERT INTO PRODUCT (
      PRDT_NUM
    , PRDT_NAME
    , PRDT_TITLE
    , PRDT_INFO
    , PRDT_REAL_PRICE
    , PRDT_STOCK
    , CATEGORY_NUM
    ) VALUES (
      #{prdtNum}
    , #{prdtName}
    , #{prdtTitle}
    , #{prdtInfo}
    , #{prdtRealPrice}
    , #{prdtStock}
    , #{categoryDto.categoryNum}
    )
  </insert>


  
   <!-- 제품 이미지 -->
  <insert id="insertPrdtImage" parameterType="ProductImageDto">
    INSERT INTO PRODUCT_IMAGE(
        PRDT_NUM
      , IMAGE_PATH
      , FILESYSTEM_NAME
    ) VALUES(
        PRODUCT_SEQ.CURRVAL
      , #{imagePath}
      , #{filesystemName}
    )
  </insert>


  <!-- 이미지 삭제 -->
  <select id="getPrdtImageInYesterday" resultType="ProductImageDto">
    SELECT PRDT_NUM, IMAGE, IMAGE_PATH, FILESYSTEM_NAME
      FROM PRODUCT_IMAGE
      WHERE IMAGE_PATH = '/admin/' || TO_CHAR(SYSDATE - 1, 'YYYY/MM/DD')
  </select>
  
  
  <!-- 제품목록 가져오기 -->
  <select id="getPrdtCount" resultType="int">
    SELECT COUNT(*)
      FROM PRODUCT 
  </select>
  
  
  <select id="getPrdtList" parameterType="Map" resultMap="ProductMap">
    SELECT A.PRDT_NUM, A.PRDT_NAME, A.PRDT_REAL_PRICE, A.PRDT_STOCK, A.FILESYSTEM_NAME
    FROM (SELECT ROW_NUMBER() OVER (ORDER BY P.PRDT_NUM DESC) AS RN, P.PRDT_NUM, P.PRDT_NAME, P.PRDT_REAL_PRICE, P.PRDT_STOCK, PI.FILESYSTEM_NAME
            FROM PRODUCT P LEFT JOIN PRODUCT_IMAGE PI 
              ON P.PRDT_NUM = PI.PRDT_NUM) A
    WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <select id="getPrdt" parameterType="int" resultType="ProductDto">
    SELECT PRDT_NUM, PRDT_NAME, PRDT_TITLE, PRDT_INFO, PRDT_REAL_PRICE, PRDT_STOCK, PRDT_HIT, CATEGORY_NUM 
      FROM PRODUCT
     WHERE PRDT_NUM = #{prdtNum}
  </select>
  
  
  <!-- 제품 수정 -->
  <update id="updatePrdt" parameterType="ProductDto">
    UPDATE PRODUCT
       SET PRDT_NAME = #{prdtName}
         , PRDT_TITLE = #{prdtTitle}
         , PRDT_REAL_PRICE = #{prdtRealPrice}
         , PRDT_INFO = #{prdtInfo}
       WHERE PRDT_NUM = #{prdtNum}
  </update>
  
  <select id="getPrdtImageList" parameterType="int" resultType="ProductImageDto">
    SELECT PRDT_NUM, IMAGE_PATH, FILESYSTEM_NAME
      FROM PRODUCT
     WHERE PRDT_NUM = #{prdtNum}
  </select>
  
  <delete id="deletePrdtImage" parameterType="String">
    DELETE
      FROM PRODUCT_IMAGE
     WHERE FILESYSTEM_NAME = #{filesystemName}  
  </delete>


  <delete id="deletePrdtImageList" parameterType="int">
    DELETE
      FROM PRODUCT_IMAGE
     WHERE PRDT_NUM = #{prdtNum}    
  </delete>
  
  <delete id="deletePrdt" parameterType="int">
    DELETE
      FROM PRODUCT
     WHERE PRDT_NUM = #{prdtNum}
  </delete>
  
  <!-- 제품 검색 -->
  <select id="getSearchPrdtCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM PRODUCT
     WHERE ${column} LIKE '%' || #{searchText} || '%' 
  </select>
  
  <select id="getSearchPrdtList" parameterType="Map" resultType="ProductDto">
    SELECT PRDT_NUM, PRDT_NAME, PRDT_TITLE, PRDT_INFO, PRDT_REAL_PRICE, PRDT_STOCK, PRDT_HIT, CATEGORY_NUM 
     FROM (SELECT ROW_NUMBER() OVER(ORDER BY PRDT_NUM DESC) AS RN, PRDT_NUM, PRDT_NAME, PRDT_TITLE, PRDT_INFO, PRDT_REAL_PRICE, PRDT_STOCK, PRDT_HIT, CATEGORY_NUM
             FROM PRODUCT
            WHERE 
            <choose>
              <when test ="column == 'PRDT_NAME'">
                PRDT_NAME LIKE '%' || #{searchText} || '%'
              </when>
              <when test="column == 'PRDT_NUM'">
                PRDT_NUM LIKE '%' || #{searchText} || '%'
              </when>
            </choose>
             )
        WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  
  
  <!--        회원           -->
  
   <!-- 회원목록 -->
   <select id="getMemCount" resultType="int">
    SELECT COUNT(*)
      FROM MEMBER
   </select>
   
    <select id="getMemList" parameterType="Map" resultType="MemberDto">
    SELECT NUM, NAME, PW, MOBILE, EMAIL, POSTCODE, JIBUNADDRESS, ROADADDRESS, DETAILADDRESS, BIRTH, GENDER, MDATE, AUTH, STATUS, REG_DATE
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RN, NUM, NAME, PW, MOBILE, EMAIL, POSTCODE, JIBUNADDRESS, ROADADDRESS, DETAILADDRESS, BIRTH, GENDER, MDATE, AUTH, STATUS, REG_DATE 
          FROM MEMBER)
     WHERE RN BETWEEN #{begin} AND #{end}
   </select>
   
     <!-- 회원 검색 -->
  <select id="getSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM MEMBER
     WHERE ${column} LIKE '%' || #{searchText} || '%'
  </select>
  
    <select id="getSearchList" parameterType="Map" resultType="MemberDto">
    SELECT NUM, NAME, PW, MOBILE, EMAIL, POSTCODE, JIBUNADDRESS, ROADADDRESS, DETAILADDRESS, BIRTH, GENDER, MDATE, AUTH, STATUS, REG_DATE
    FROM (
      SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RN, NUM, NAME, PW, MOBILE, EMAIL, POSTCODE, JIBUNADDRESS, ROADADDRESS, DETAILADDRESS, BIRTH, GENDER, MDATE, AUTH, STATUS, REG_DATE 
      FROM MEMBER
      WHERE
        <choose>
          <when test="column == 'NAME'">
            NAME LIKE '%' || #{searchText} || '%'
          </when>
          <when test="column == 'EMAIL'">
            EMAIL LIKE '%' || #{searchText} || '%'
          </when>
          <when test="column == 'MOBILE'">
            MOBILE LIKE '%' || #{searchText} || '%'
          </when>
        </choose>
    )
    WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 회원 탈퇴 -->
  <delete id="deleteUser" parameterType="int">
    DELETE 
      FROM MEMBER
     WHERE NUM = #{num}
  </delete>
  
  
  <!-- 매출 -->

  <!-- 특정 회원 매출 총액 -->

  
  <!-- 쿠폰 -->
    <insert id="insertCp" parameterType="CpDto" >
      INSERT INTO CP (
          CP_NUM
        , CP_NAME
        , CP_INFO
        , CP_PRICE
        , CP_MIN
        , START_AT
        , END_AT
      ) VALUES (
          CP_SEQ.NEXTVAL
        , #{cpName}
        , #{cpInfo}
        , #{cpPrice}
        , #{cpMin}
        , TO_DATE(#{startAt},'YYYY-MM-DD')
        , TO_DATE(#{endAt},'YYYY-MM-DD')
      )
    </insert>
    
  <!-- 쿠폰수정 -->
  <update id="modifyCp" parameterType="CpDto" >
    UPDATE CP
       SET CP_NAME = #{cpName}
         , CP_INFO = #{cpInfo}
         , CP_PRICE = #{cpPrice}
         , CP_MIN  = #{cpMin}
         , START_AT = #{startAt}
         , END_AT = #{endAt}
     WHERE CP_NUM = #{cpNum}
  </update>

  <!-- 쿠폰목록 -->
    <select id="getCpCount">
      SELECT COUNT(*)
        FROM CP
    </select>
    
    <select id="getCpList" parameterType="Map" resultType="CpDto">
      SELECT CP_NUM, CP_NAME, CP_INFO, CP_PRICE, CP_MIN, START_AT, END_AT
        FROM (SELECT ROW_NUMBER() OVER(ORDER BY CP_NUM DESC) AS RN,   CP_NUM, CP_NAME, CP_INFO, CP_PRICE, CP_MIN, START_AT, END_AT
                FROM CP)
       WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
    
  <!-- 쿠폰 정보 가져오기 -->
    <select id="getCp" parameterType="int" resultType="CpDto">
      SELECT CP_NUM, CP_NAME, CP_INFO, CP_PRICE, CP_MIN, START_AT, END_AT
        FROM CP
       WHERE CP_NUM = #{cpNum}
    </select>

  <!-- 쿠폰 삭제 -->
  <delete id="deleteCp" parameterType="int">
   DELETE
     FROM CP
    WHERE CP_NUM = #{cpNum}
  </delete>
  
  
 
    
    <!-- 주문 목록(보여주기) -->
    
    <select id="getOrderCount" resultType="int">
      SELECT COUNT(*)
        FROM ORDER_T
    </select>
   
    <select id="getOderList" parameterType="Map" resultType="OrderDto">
       SELECT ORDER_NUM, NUM, ORDER_TOTAL_PRICE, ORDER_STATUS, ORDER_DATE, ORDER_NOTICE, RECEIVER_NAME, RECEIVER_PHONE, ORDERER_NAME, ORDERER_PHONE, DELIVERY_METHOD, PAY_METHOD, CARD_NAME, CARD_PAY 
         FROM (SELECT ROW_NUMBER() OVER(ORDER BY ORDER_NUM DESC) AS RN, ORDER_NUM, NUM, ORDER_TOTAL_PRICE, ORDER_STATUS, ORDER_DATE, ORDER_NOTICE, RECEIVER_NAME, RECEIVER_PHONE, ORDERER_NAME, ORDERER_PHONE, DELIVERY_METHOD, PAY_METHOD, CARD_NAME, CARD_PAY 
                 FROM ORDER_T )
          WHERE RN BETWEEN #{begin} AND #{end}
    </select> 
  
  
  
  
  
  
  
  <!-- 제품 별 판매 금액 -->
  <select id="">
    SELECT OD.PRDT_NUM, P.PRDT_NAME, P.PRDT_REAL_PRICE, SUM(OD.ORDER_QTY) AS SQ, SUM(OD.ORDER_QTY * P.PRDT_REAL_PRICE) AS TS
      FROM ORDER_DETAIL OD INNER JOIN PRODUCT P 
        ON OD.PRDT_NUM = P.PRDT_NUM
     GROUP BY OD.PRDT_NUM, P.PRDT_NAME, P.PRDT_REAL_PRICE, OD.ORDER_QTY;
  </select>
  



</mapper>

