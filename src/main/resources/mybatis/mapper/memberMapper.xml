<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.withmall.dao.MemberMapper">

<select id="getMember" parameterType="Map" resultType="MemberDto">
    SELECT NUM, NAME, PW, MOBILE, EMAIL, POSTCODE, JIBUNADDRESS, ROADADDRESS, DETAILADDRESS, BIRTH, GENDER, MDATE, AUTH, STATUS, AGREE, REG_DATE
    FROM MEMBER
    <where>
        <if test="email != null">AND EMAIL = #{email}</if>
        <if test="pw != null">AND PW = #{pw}</if>
        <if test="num != null">AND NUM = #{num}</if>
    </where>
</select>

<insert id="insertMember" parameterType="MemberDto">
    INSERT INTO MEMBER (
        NUM,
        NAME,
        PW,
        MOBILE,
        EMAIL,
        POSTCODE,
        JIBUNADDRESS,
        ROADADDRESS,
        DETAILADDRESS,
        GENDER,
        MDATE,
        AUTH,
        STATUS,
        AGREE,
        REG_DATE
    ) VALUES (
        MEMBER_SEQ.NEXTVAL,
        #{name},
        #{pw},
        #{mobile},
        #{email},
        #{postcode},
        #{jibunaddress},
        #{roadaddress},
        #{detailaddress},
        #{gender},
        SYSDATE,
        0,
        0,
        #{agree},
        SYSDATE
    )
</insert>
    
<insert id="insertNaverMember" parameterType="MemberDto">
    INSERT INTO MEMBER (
        NUM,
        NAME,
        MOBILE,
        EMAIL,
        GENDER,
        MDATE,
        STATUS,
        AGREE,
        REG_DATE
    ) VALUES (
        MEMBER_SEQ.NEXTVAL,
        #{name},
        #{mobile},
        #{email},
        #{gender},
        SYSDATE,
        1,
        #{agree},
        SYSDATE
    )
</insert>

  
  <delete id="deleteMember" parameterType="MemberDto">
    DELETE
      FROM MEMBER
     WHERE NUM = #{num}
  </delete>
  
  <insert id="insertLeaveMember" parameterType="MemberDto">
  	INSERT INTO MEMBER_EXP (
  			    EMAIL
  			   ,REG_DATE
  			   ,EXP_DATE
  	) VALUES (
		  		#{email}
		  	   ,#{regDate}
		  	   ,SYSDATE
  		    	)
  </insert>
  
  <select id="getLeaveMember" parameterType="Map" resultType="LeaveMemberDto">
    SELECT EMAIL, REG_DATE, EXP_DATE
      FROM MEMBER_EXP
     WHERE EMAIL = #{email}
  </select>
  
  <select id="getInactiveMember" parameterType="Map" resultType="InactiveMemberDto">
    SELECT NUM, NAME, PW, MOBILE, EMAIL, POSTCODE, JIBUNADDRESS, ROADADDRESS, DETAILADDRESS, BIRTH, GENDER, MDATE, AUTH, STATUS, AGREE, REG_DATE, STOP_DATE
      FROM MEMBER_INACTIVE
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
    </where>
  </select>  
  <update id="updateMember" parameterType="MemberDto">
  	UPDATE MEMBER
  	   SET NAME = #{name}
  	   	 , GENDER = #{gender}
  	   	 , MOBILE = #{mobile}
  	   	 , POSTCODE = #{postcode}
  	   	 , ROADADDRESS = #{roadaddress}
  	   	 , JIBUNADDRESS = #{jibunaddress}
  	   	 , DETAILADDRESS = #{detailaddress}
  	   	 , AGREE = #{agree}
  	 WHERE NUM = #{num}
  </update>
  
  <update id="updateMemberPw" parameterType="MemberDto">
    UPDATE MEMBER
       SET PW = #{pw}
         , MDATE = SYSDATE
     WHERE NUM = #{num}
  </update>
  <update id="updatepw" parameterType="Map">
  	UPDATE MEMBER 
  	   SET PW = #{pw} 
  	 WHERE EMAIL = #{email}
  </update>
</mapper>
